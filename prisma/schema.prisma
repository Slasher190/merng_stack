// prisma/schema.prisma

// MongoDB configuration
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Generator configuration
generator client {
  provider = "prisma-client-js"
}

// User model
model User {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  email       String    @unique
  password    String
  cardDetails String // Should be encrypted in a real-world application
  address     String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  cart        Cart[]
  products    Product[]
  // Product     Product? @relation(fields: [productId], references: [id])
  // Product     Product? @relation(fields: [productId], references: [id])
}

// Cart model
model Cart {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
}

// Product model
model Product {
  id          String             @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  stock       Int
  category    Category           @relation(fields: [categoryId], references: [id])
  categoryId  String
  addedById   String
  inCarts     Cart[]
  adminLink   AdminProductLink[]
  adminId     String?
  Admin       Admin?             @relation(fields: [adminId], references: [id])
  User        User?              @relation(fields: [userId], references: [id])
  userId      String?            @db.ObjectId
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
}

// Category model
model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

// Admin model
model Admin {
  id        String             @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  // addedProducts Product[]          @relation("AddedBy", references: [id])
  adminLink AdminProductLink[]
  products  Product[]
}

// AdminProductLink model
model AdminProductLink {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  admin     Admin    @relation(fields: [adminId], references: [id])
  adminId   String
  product   Product  @relation(fields: [productId], references: [id])
  productId String
}

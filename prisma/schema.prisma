// prisma/schema.prisma

// MongoDB configuration
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// Generator configuration
generator client {
  provider = "prisma-client-js"
}

// User model
model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String
  password   String
  address    Address  @relation(fields: [addressId], references: [id])
  addressId  String   @db.ObjectId
  profilePic Image?   @relation(fields: [imageId], references: [id])
  imageId    String?  @db.ObjectId
  Cart       Cart[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

// Address model
model Address {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  street      String
  zipcode     String
  houseNumber String
  location    String
  User        User[]
}

// Images model
model Image {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  publicId  String
  publicUri String
  User      User[]
  Product   Product? @relation(fields: [productId], references: [id])
  productId String?  @db.ObjectId
}

// Category model
model Category {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

// Prodcuct model
model Product {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  price       Float
  stock       Int
  images      Image[]
  Category    Category? @relation(fields: [categoryId], references: [id])
  categoryId  String?   @db.ObjectId
  inCart      Cart[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  //admin side        
  createdBy   Admin     @relation(fields: [adminId], references: [id])
  adminId     String    @db.ObjectId
}

// Cart model
model Cart {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  product   Product  @relation(fields: [productId], references: [id])
  productId String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// Admin model
model Admin {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}
